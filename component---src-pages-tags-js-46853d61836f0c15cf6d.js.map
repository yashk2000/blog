{"version":3,"sources":["webpack:///./src/components/Article/Article.js","webpack:///./src/components/List/List.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/pages/tags.js"],"names":["Article","props","children","theme","Fragment","space","inset","default","text","maxWidth","tablet","desktop","List","edges","stack","m","xs","font","size","s","lineHeight","l","map","edge","node","title","frontmatter","slug","fields","key","to","Headline","xxl","color","neutral","gray","j","weight","standard","brand","primary","xl","TagsPage","posts","data","tagsPosts","forEach","tags","tag","push","tagList","item","pageTitle"],"mappings":"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","file":"component---src-pages-tags-js-46853d61836f0c15cf6d.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          padding-bottom: 0px !important;\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nconst List = props => {\n  const { edges, theme } = props;\n\n  return (\n    <React.Fragment>\n      <ul>\n        {edges.map(edge => {\n          const {\n            node: {\n              frontmatter: { title },\n              fields: { slug }\n            }\n          } = edge;\n\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        ul {\n          margin: ${theme.space.stack.m};\n          padding: ${theme.space.m};\n          list-style: circle;\n        }\n        li {\n          padding: ${theme.space.xs} 0;\n          font-size: ${theme.font.size.s};\n          line-height: ${theme.font.lineHeight.l};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nList.propTypes = {\n  edges: PropTypes.array.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default List;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: 0;\n          color: ${theme.color.neutral.gray.j};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import { FaTag } from \"react-icons/fa/\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport theme from \"../theme/theme.yaml\";\nimport Article from \"../components/Article/\";\nimport Headline from \"../components/Article/Headline\";\nimport List from \"../components/List\";\nimport Seo from \"../components/Seo\";\n\nconst TagsPage = props => {\n  const {\n    data: {\n      posts: { edges: posts }\n    }\n  } = props;\n\n  // Create tags list\n  const tagsPosts = {};\n  posts.forEach(edge => {\n    \n    const {\n      node: {\n        frontmatter: { tags }\n      }\n    } = edge;\n\n    if (tags && tags != null) {\n      tags.forEach(tag => {\n        if (tag && tag != null) {\n          if (!tagsPosts[tag]) {\n            tagsPosts[tag] = [];\n          }\n          tagsPosts[tag].push(edge);\n        }\n      })\n    }\n  });\n\n  const tagList = [];\n\n  for (var tag in tagsPosts) {\n    tagList.push([tag, tagsPosts[tag]]);\n  }\n\n  return (\n    <React.Fragment>\n      <Article theme={theme}>\n        <header>\n          <Headline title=\"Posts by tags\" theme={theme} />\n        </header>\n        {tagList.map(item => (\n          <section key={item[0]}>\n            <h2>\n              <FaTag /> {item[0]}\n            </h2>\n            <List edges={item[1]} theme={theme} />\n          </section>\n        ))}\n        {/* --- STYLES --- */}\n        <style jsx>{`\n          h2 {\n            margin: 0 0 0.5em;\n            color: ${theme.color.neutral.gray.j};\n            \n          }\n          @from-width desktop {\n            :global(a:hover) {\n              color: ${theme.color.brand.primary};\n            }\n          }\n          h2 :global(svg) {\n            height: 0.8em;\n            fill: ${theme.color.brand.primary};\n          }\n        `}</style>\n      </Article>\n\n      <Seo pageTitle=\"Tags\"/>\n    </React.Fragment>\n  );\n};\n\nTagsPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default TagsPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query PostsQuery {\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//[0-9]+.*--/\" }\n      }\n      sort: { fields: [fields___prefix], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            prefix\n          }\n          frontmatter {\n            title\n            tags\n            author\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}