{"componentChunkName":"component---src-templates-post-template-js","path":"/learning/","result":{"data":{"post":{"id":"5822518c-4e31-5279-abf6-acf5050594d6","html":"<center>\n<span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto;  max-width: 800px;\">\n      <a class=\"gatsby-resp-image-link\" href=\"/blog/static/431d5e47218f8b087468e41e782f77aa/2fd05/1.jpg\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 44.79166666666667%; position: relative; bottom: 0; left: 0; background-image: url(&apos;data:image/svg+xml,%3csvg%20xmlns=\\&apos;http://www.w3.org/2000/svg\\&apos;%20width=\\&apos;400\\&apos;%20height=\\&apos;179\\&apos;%3e%3cpath%20d=\\&apos;M398%205l-5%201c-12%201-20%203-21%205h-24l-14%201c-5%201-5%201-2%204%202%202%204%203%204%201l4%201c3%201%204%203%204%204%200%203%201%202%205%200l7-2%207-2c6-3%206-3%208%202l2%204-2%201-3%202%202%201%204-2%202%201-2%201c-2%201-2%201%200%201%203%200%203%200%203-3%200-4%204-5%2010-1h7l6-1V14c0-9-1-11-2-9M152%209c-2%201-2%203-1%203v10c-2%204-2%205-8%206s-13%204-16%207c-3%202-20%208-27%209l-8%201-8%201c-6-1-11%200-11%202l10%201a1241%201241%200%200119%201l4-1c2-1%203-1%202-2l3-1%204-1%2010%201c1%201%202%201%205-1%204-5%207-5%2024-1%202%200%203-1%200-3l-1-1-1-2-2-2%203%201%205%201%204%201c1%201%202%201%201%202-2%200-1%201%202%203l3%201-2-2v-1l7%203c6%205%2017%208%2022%207l4%201%203%201c2%200%202%200%200-1-2%200-3-2-1-2%202-1%202-4%200-4l-3-2c-1-2-2-2-4-2-2%201-3%203-1%203l1-1%201-1c2%202%200%204-3%204s-4-1-2-4%200-5-8-9l-11-5-8-2c-4-1-5-1-5-4l-2-6c-1-4-1-5%203-7v-1l-3-1c-2-2-2-2-4%200m210%2023l-14%202a317%20317%200%2001-49%202c2%200%203%201%203%202s8%205%2018%206a611%20611%200%200153%2015l1%202h-2l-3%201-4%201c-3%201-3%201-2%204%203%205%202%206-6%206-9%201-13%203-11%204s-5%202-15%202c-8%200-11%200-25%203l-15%201-6%201-2%201-3%201%203%201h3l-3%201c-3%201-3%201-1%201l3%201-3%201c-6%200-7%200-4%202l2%204c1%202%200%202-2%201l-4%201c-2%202-2%202%200%201%202%200%203%200%205%202v4l-5%201c-3%200-10%203-10%204l3%202h2l1-1v2c-1%203-4%203-5%200-1-1-2-2-3-1-2%200-6-3-6-5l-4-1c-5%200-5%202-1%203l3%201%203%202c4%203%208%206%206%206l-3-2-6-1-4%201%203%201c4%202%206%205%204%205l-1%201%202%201%203%201-1%201-2%201c0%202%205%202%2015%201%2013-2%2018-2%2022-1%204%202%204%202-9%203a1316%201316%200%2000-15%202c1%201-1%201-4%201l-6%201-7%201c-5%200-6%200-3%201%203%200%201%201-6%201-14%201-19%202-19%203l1%201c18%200%2048-4%2052-6s19-4%2016-2l-4%201c-9%200-5%202%206%202l12%201-13%201-15%202-17%201a253%20253%200%2000-30%203c-6%200%200%202%207%202%2012%200%205%202-10%203a53315%2053315%200%2000-22%203l3%201h-3c-3-1-4-1-4%201h-6c-1-1%200-1%201-2%202-1%202-1-1-1l-5-1%201%201c1%200%202%200%201%201h-4a270%20270%200%2000-52-1l24%202%2025%202%2019%201%202-1-1%201v2l2-1c1-1%207%201%207%202l-4%201-12%202-8%201-6%202-7%201-8%201c-1%202-7%202-21%203a256%20256%200%2000-31%203l17-3c17-3%2022-5%2022-6l2-1%201-1h16c2-1%201-1-2-1l-5-3-4-1c-2%200-3%200-2-1l-2-1-3%201h-22l-5-1-3-1h-3l-5%201a437%20437%200%2000-38%201c2-2-1-2-9-1-9%201-10%201-4-2l16-1h7l-1-1%207-1c11%200%2016%200%2014-1-1-1%206-1%2045-3l16-1-2-1-2-2h-2c-1%201-3%202-4%201l-4%201c-2%201-33%200-32-1h6c3%200%204%200%203-1s-1-2%201-2h2c1%202%2014-1%2014-4%200-1-5%200-8%202l-4%201c-2%200-2%200%200-1l7-3a113%20113%200%200118-7l6-2%207-2%205-3%202-2h-4c-2%201-4%201-5-1h-4l-1-1-1%202c0%202-1%203-2%203l-1-2c1-1%201-1-4-1-6%201-6%201-5%204v2h-2c1%202%200%202-1%202l-5%201-10%201c-7%200-8%200-8-2-1-3%200-5%202-5l1-1%203-2%202-1%203-1%207-3%205-2c2%200%203-2%201-2l-1-2h7l3-3c4-2%203-2-6-1-7%202-8%203-8%205l-3%201c-2-1-3-1-4%201l-2%201-2-1-11-1c-10%200-13%201-3%202h4l-3%201c-5%202-38%202-34%200l5-1c3%200%204-1%203-4l-1-2v-1l2-1%202-1c-1-1%201-2%209-4%204-1%207%200%204%201l-1%202c0%202%206%202%2013%201l9-2c10-1%2013-2%208-3-1-1%200-1%202-1%204%200%204%200%202-1s-2-1%202-1l4%201h1c1-1%207-2%208-1%201%202%209%200%209-2%201-2%207-4%208-2l4%202c3%202%203%202%204%200%202-2%202-2%203-1%201%202%202%202%204%202v-2h5c6%200%207%200%207-2l3-2c1-1%203%201%201%202-1%201-1%201%201%201s3-1%200-4c-1-2-8-2-10%200-1%202-3%202-6%202s-4-1-4-3c0-3%200-3%201-2%203%202%204%201%205-4v-4c1-1%209%204%209%206l5%201%204-1%201-1c2%200%201%204-1%204-2%201%202%205%205%204%205-1%205-1%203-2s-2-1%200-1l2%201c1%202%2011%200%2015-3%204-2%2026-5%2039-5l16-1a1713%201713%200%200126-5%2080%2080%200%2001-21-4h-24l1%201%201%201-6-1a214%20214%200%2000-21-4l3-1h-12l-10%201c1-1%201-1-2-1l-9%201c-5%200-6%200-3%201%205%201%208%203%206%203l-8%202c-4%201-5%202-6%200l-4-1c-4%200-4-3%200-3%204-1%204-3%200-3l-6-1c-2%200-3%200-2%201s0%201-3%201c-6%201-6%203%200%202%205%200%208%201%204%202l-2%203c-1%202-2%202-4%202-4%200-14%203-14%204l6%204c2%200%203%204%201%204l-1%201c2%202-1%203-3%202l-1-2v-4l-2%201-3%202c-2%200-2%200%201-3l1-3c-7-1-18%200-19%202l-5%202c-3%200-4%201-5%202%200%201-1%202-3%202-4%201-5%200-2-1%202-1%203-2%202-3-2-2-5-1-11%201-2%202-5%203-6%202l-6%202-6%201%2013-7%203-1%202-1%203-1h-24c0-2-4-2-18-5l-5-1H78l2-1%209-5%2010-4c4%200%204%200%202%201l-4%202c-4%200-1%203%205%204l14%203c11%203%2015%203%2015-1l1-2v-1l-1-3c0-3-1-4-2-4h-11c0%202-6%203-10%203-5-1-5-3%201-3%207%200%208-1%203-3l-7-1-12-4a167%20167%200%2000-26-8%202144%202144%200%2001-54-2L0%2046v133h401v-65l-1-72v-7l-13-2c-15-2-16-2-25-1M247%2042l-2%201c-1%200-1%201%201%202%203%202%203%205%201%209l-1%204c1%201%201%201%203-2l1-3%202%203c1%202%201%203%202%202v-3c-3-4-2-8%201-10%202-1%203-3%201-2l-3-1c0-2-5-2-6%200m50%208c-3%201-5%203-5%204l-1%203-1%203c1%202%201%202%202-1%202-1%203-3%204-2l1-1c0-3%204-1%205%202%201%205%201%205-1%205l-2%202c0%202%203%203%2012%203l5%202c0%202%201%202%204%202s3%200%202-1c-4-1-2-3%203-2l1-1-1-1%201-7v-2l-1-2c1-1%200-1-1-1h-2l2-2c4-3%202-5-5-5h-12c-5-1-6-1-10%202M23%20109l7%202%209%202c3%203%206%204%2010%204l4%201-4-1-5-3-3-1c-1-1%201-1%204-1h3c-2-1-2-1%200-1h4l6%201h4l-4-2c-4-1-34-2-35-1m29%2012l4%201%2015%205%204%201%203%201%202%201%203%202c2%201%202%201-1%201-5%200-2%201%2010%204l10%202%202%201%205%201h5l-3-3-4-1-4-2-5-1-6-3-6-3c-4-3-37-10-34-7\\&apos;%20fill=\\&apos;%23f9ebd2\\&apos;%20fill-rule=\\&apos;evenodd\\&apos;/%3e%3c/svg%3e&apos;); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"1\" title=\"1\" src=\"/blog/static/431d5e47218f8b087468e41e782f77aa/b9a50/1.jpg\" srcset=\"/blog/static/431d5e47218f8b087468e41e782f77aa/d336c/1.jpg 200w,\n/blog/static/431d5e47218f8b087468e41e782f77aa/9c499/1.jpg 400w,\n/blog/static/431d5e47218f8b087468e41e782f77aa/b9a50/1.jpg 800w,\n/blog/static/431d5e47218f8b087468e41e782f77aa/5e53b/1.jpg 1200w,\n/blog/static/431d5e47218f8b087468e41e782f77aa/b7ec6/1.jpg 1600w,\n/blog/static/431d5e47218f8b087468e41e782f77aa/2fd05/1.jpg 1920w\" sizes=\"(max-width: 800px) 100vw, 800px\" loading=\"lazy\">\n  </a>\n    </span>\n</center>\n<p>From the previous blogs, we know basically how a machine will make predictions. So obviously, the next question is how will a machine improve the prediction it\nmakes, how will the prediction be more accurate? This is where we will understand how a machine learns, or in a more technical way, how the algorithm will update\nthe weights to give a better output. </p>\n<p>In a previous blog, I mentioned the three basic steps of how machine learning works are predicting, comparing and learning. Let‚Äôs dive into the comparing and\nlearning parts now. </p>\n<h2>üìä Comparing</h2>\n<p>After predicting an output, we need to measure how close the output was to the correct answer. Only once we know by how much did our measurement miss, will we\nbe able to ‚Äúlearn‚Äù where we went wrong. </p>\n<p>For this, we find out the error between the prediction and the true output. The simplest way to find this error is to subtract the input from the output and see\nby what margin we were off. </p>\n<h2>üìà Learning</h2>\n<p>After comparison, the final step is learning which updates the  weights in a network to make better predictions. In this  blog, we will consider a learning\nalgorithm called Gradient Descent.</p>\n<h2>üéØ Finding the error</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">weight <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span>\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span>\ngoal <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\npred <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">*</span> weight\n\nerror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>goal <span class=\"token operator\">-</span> pred<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Output: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">0.7224999999999999</span></code></pre></div>\n<p>Here we calculated the difference between the prediction made and the goal, and then squared it. This is called the mean squared error. This is one of the\ntechniques using which we can find the error. There‚Äôll be a couple of questions coming up about now.</p>\n<p><strong>Why did we square the error?</strong></p>\n<p>We want the error to be positive, and hence we square it. Simply finding the difference between <code class=\"language-text\">goal</code> and <code class=\"language-text\">pred</code> might sometimes give a negative result.</p>\n<p><strong>Why do we need the error to be positive?</strong></p>\n<p>Let‚Äôs say you‚Äôre practising target shooting. Whether your bullet hits the target 2 centimetres above, or 2 centimetres below, both the times, you missed by 2\ncentimetres. In both the cases your error is 2 centimetres. Now instead of squaring if you just find the error, the error will be 2 centimetres, and -2\ncentimeters, thereby making the resultant average of the error 0(<code class=\"language-text\">2 + (-2) = 0</code>). This will give us a wrong result. Therefore to include the entire range, we\nkeep the error positive by squaring it. </p>\n<p>One thing to note here is: Squaring will make big errors bigger, and small errors, -1 &#x3C; error &#x3C; 1, smaller. But this works fine because we will be able to\npenalise bigger errors better, instead of worrying about the small ones. </p>\n<h2>üìâ Gradient descent</h2>\n<p>So now let‚Äôs get into gradient descent. Imagine you are in a valley. You need to get to the bottom of the valley by taking small steps at a time. If your steps\nare too large, you‚Äôll end up crossing the bottom, and if your steps are too small it‚Äôll take you forever to get to the bottom. The algorithm which will help you\nget to the bottom efficiently is gradient descent. </p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto;  max-width: 800px;\"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/c5706/gd.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 87.73424190800682%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'351\\'%3e%3cpath%20d=\\'M46%2019a614%20614%200%2001-1%205c2%200%202%204%202%2049l1%2049V73c0-43%200-49%202-49l-1-5-2-4-1%204M35%2044a492%20492%200%200036%20168c-3%200-4%208-2%2012%202%203%204%204%208%204%203%201%207%204%204%204l-1%201%201%201c1%200%204%203%207%208a145%20145%200%200081%2068l-60%201-62%201h61a1727%201727%200%200192%200%2030932%2030932%200%2000141%201c0%202%200%202%205%200l5-1-3-2c-6-2-7-2-7-1%201%202-5%202-69%202h-70l10-4c68-22%20118-124%20127-256l-1-11a480%20480%200%2001-25%20136c-23%2069-58%20114-101%20129-13%205-36%205-49%201-30-10-56-35-78-73l-3-6%202-3c3-7%200-12-7-13-3%200-3-1-7-8A453%20453%200%200137%2049c0-9-2-13-2-5m12%20183\\'%20fill=\\'%23f9ebd2\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"gd\"\n        title=\"gd\"\n        src=\"/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/67d59/gd.png\"\n        srcset=\"/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/563d8/gd.png 200w,\n/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/7c2ef/gd.png 400w,\n/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/67d59/gd.png 800w,\n/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/c5706/gd.png 1174w\"\n        sizes=\"(max-width: 800px) 100vw, 800px\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>\n<p>We are currently at the black dot, and we want to get to the dotted circle, which is the bottom.   </p>\n<p>The basic rule of machine learning: We need to keep adjusting the weights so that the error reduces to 0.</p>\n<p>Let‚Äôs see the code for a basic implementation of gradient descent: </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">weight<span class=\"token punctuation\">,</span> goal_pred<span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> iteration <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----\\nWeight:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tpred <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">*</span> weight\n\terror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pred <span class=\"token operator\">-</span> goal_pred<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\tdelta <span class=\"token operator\">=</span> pred <span class=\"token operator\">-</span> goal_pred\n\tweight_delta <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> <span class=\"token builtin\">input</span>\n\tweight <span class=\"token operator\">=</span> weight <span class=\"token operator\">-</span> weight_delta\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Prediction:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Weight Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight_delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Output: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-0.55\n-----\nWeight:0.55\nError:0.01102500000000002 Prediction:0.6050000000000001\nDelta:0.1050000000000001 Weight Delta:0.11550000000000012\n-----\nWeight:0.43449999999999994\nError:0.00048620250000000064 Prediction:0.47795\nDelta:-0.022050000000000014 Weight Delta:-0.024255000000000016\n-----\nWeight:0.45875499999999997\nError:2.1441530249999833e-05 Prediction:0.5046305\nDelta:0.004630499999999982 Weight Delta:0.0050935499999999806</code></pre></div>\n<p><strong>What does each variable do here?</strong></p>\n<table>\n<thead>\n<tr>\n<th>pred</th>\n<th>The prediction made by the network</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>error</td>\n<td>The mean squared error</td>\n</tr>\n<tr>\n<td>delta</td>\n<td>The absolute error with it‚Äôs sign</td>\n</tr>\n<tr>\n<td>weight_delta</td>\n<td>Calculating the amount by which the weights need to be changed along with the direction (positive or negative, increase or decrease)</td>\n</tr>\n</tbody>\n</table>\n<p>Here we calculated the <code class=\"language-text\">weight_delta</code> by multiplying the delta with the input. The reason for this is so that the change to be made in the weights can be scaled.\nBasically, if the input is big, the amount by which we change the weight should also be big.</p>\n<p>This is the simplest implementation of gradient descent in which we: </p>\n<ul>\n<li>Find the prediction</li>\n<li>Find the mean squared error</li>\n<li>Find the absolute error</li>\n<li>Find the amount by which the weight needs to be updates</li>\n<li>Update the weight</li>\n</ul>\n<p>As we keep improving the algorithm, the underlying steps will still follow the same principles. </p>\n<p>Let‚Äôs dig deeper into <code class=\"language-text\">weight_delta</code> before we proceed further. <code class=\"language-text\">weight_delta</code> is a derivative. A derivative simply allows us to pick a couple of variables in a\nformula and figure out how they relate to each other. Here, <code class=\"language-text\">weight_delta</code> is what is determining the relation between the <code class=\"language-text\">error</code> and the <code class=\"language-text\">weight</code>. Our\nderivative, <code class=\"language-text\">weight_delta</code> tells how much did changing a weight contribute to the error. </p>\n<table>\n<thead>\n<tr>\n<th><img src=\"https://user-images.githubusercontent.com/41234408/107554978-a343eb00-6bfc-11eb-97f5-1a3669ca8154.gif\" alt=\"gd2\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>How gradient descent reaches the bottom</td>\n</tr>\n</tbody>\n</table>\n<p>Now, in the algorithm we ran, try to set the <code class=\"language-text\">goal_pred</code> variable to 4.</p>\n<p>Output: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:2.0\nError:56.25 Prediction:8.0\nDelta:7.5 Weight Delta:30.0\n-----\nWeight:-28.0\nError:12656.25 Prediction:-112.0\nDelta:-112.5 Weight Delta:-450.0\n-----\nWeight:422.0\nError:2847656.25 Prediction:1688.0\nDelta:1687.5 Weight Delta:6750.0</code></pre></div>\n<p>The output is not even remotely close to 2, and the error just kept on increasing. The reason for this is they way we are updating the weights. </p>\n<p><code class=\"language-text\">weight = weight - (input * (pred - goal_pred))</code></p>\n<p>The larger, the input, the larger the update to the weight. The network will start overcorrecting in both directions in order to compensate for the error. </p>\n<p>Imagine you‚Äôre blindfolded and are jumping down a mountain in small jumps to get to the bottom. So you keep taking small jumps. In case of this current\nscenario, let‚Äôs assume you miss the bottom, and jump up to the other side which starts going up. You know now that you‚Äôve crossed the bottom since you‚Äôre going\nfurther away from your goal. So now in order to take a step back, you jump in the reverse direction. But since your input is already big, it‚Äôll result in your\njump taking you back up to the other side of the mountain. This will keep continuing, the error increasing, and you going further away from the bottom.</p>\n<p>This is known as divergence. </p>\n<h2>ü§º‚Äç‚ôÇÔ∏è How to combat divergence?</h2>\n<p>Now that we know where our algorithm lacks, we need to improve it. The error is basically that the network is overshooting. What if we could simply multiply the\nweight update by a small number which compensates for this overshooting? This way, we would be taking smaller steps instead of jumping here and there.</p>\n<p>For this purpose, we use a variable called alpha. The alpha value generally ranges between 0 and 1. <code class=\"language-text\">alpha</code> is something which we need to find out, mostly by\nguesswork(there are more elegant solutions to this than guesswork which we can get to later). We can try out different values of alpha ranging between 0 and 1,\nlike 0.1, 0.01, 0.001, etc, and keep on adjusting it until we feel the value is optimal and there won‚Äôt be any major overshooting. </p>\n<p>So we will simply multiply our derivative with alpha. Let‚Äôs take a look at the updated code which includes <code class=\"language-text\">alpha</code> as well.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">weight<span class=\"token punctuation\">,</span> goal_pred<span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nalpha <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span>\n\n<span class=\"token keyword\">for</span> iteration <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----\\nWeight:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tpred <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">*</span> weight\n\terror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pred <span class=\"token operator\">-</span> goal_pred<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\tdelta <span class=\"token operator\">=</span> pred <span class=\"token operator\">-</span> goal_pred\n\tweight_delta <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> <span class=\"token builtin\">input</span>\n\tweight <span class=\"token operator\">=</span> weight <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">*</span> weight_delta<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Prediction:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Weight Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight_delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Output: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:0.2\nError:0.09000000000000002 Prediction:0.8\nDelta:0.30000000000000004 Weight Delta:1.2000000000000002\n-----\nWeight:0.07999999999999999\nError:0.03240000000000002 Prediction:0.31999999999999995\nDelta:-0.18000000000000005 Weight Delta:-0.7200000000000002\n-----\nWeight:0.15200000000000002\nError:0.011664000000000022 Prediction:0.6080000000000001\nDelta:0.1080000000000001 Weight Delta:0.4320000000000004</code></pre></div>\n<p>The output is now a lot closer to 0.5, than what it was before. This means we‚Äôre on the correct track. Now we can just increase the number of iterations from 4\nto 20 in order to get the desired result. </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">weight<span class=\"token punctuation\">,</span> goal_pred<span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\nalpha <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span>\n\n<span class=\"token keyword\">for</span> iteration <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----\\nWeight:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tpred <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span> <span class=\"token operator\">*</span> weight\n\terror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pred <span class=\"token operator\">-</span> goal_pred<span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\tdelta <span class=\"token operator\">=</span> pred <span class=\"token operator\">-</span> goal_pred\n\tweight_delta <span class=\"token operator\">=</span> delta <span class=\"token operator\">*</span> <span class=\"token builtin\">input</span>\n\tweight <span class=\"token operator\">=</span> weight <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">*</span> weight_delta<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Prediction:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>delta<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Weight Delta:\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>weight_delta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Output: </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:0.2\nError:0.09000000000000002 Prediction:0.8\nDelta:0.30000000000000004 Weight Delta:1.2000000000000002\n-----\nWeight:0.07999999999999999\nError:0.03240000000000002 Prediction:0.31999999999999995\nDelta:-0.18000000000000005 Weight Delta:-0.7200000000000002\n-----\n\n<span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\n<span class=\"token builtin class-name\">.</span>\nWeight:0.1249647361261568\nError:1.9896652774865827e-08 Prediction:0.4998589445046272\nDelta:-0.00014105549537279938 Weight Delta:-0.0005642219814911975\n-----\nWeight:0.1250211583243059\nError:7.16279499894418e-09 Prediction:0.5000846332972236\nDelta:8.463329722363522e-05 Weight Delta:0.00033853318889454087\n-----\nWeight:0.12498730500541645\nError:2.5786061996210327e-09 Prediction:0.4999492200216658\nDelta:-5.077997833419223e-05 Weight Delta:-0.00020311991333676893\n-----\nWeight:0.12500761699675011\nError:9.282982318601891e-10 Prediction:0.5000304679870005\nDelta:3.046798700045983e-05 Weight Delta:0.00012187194800183931</code></pre></div>\n<p>We got to the output, 0.5000304679870005 which is almost equal to 0.5 and the error is almost negligible now. </p>\n<p>So this is basically how gradient descent works under the hood and how machines can learn. In the next blog, we will play with gradient descent a bit more,\nlearn to use it with multiple inputs, outputs, and tweak some aspects of the weights to get better results. </p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"center","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["gatsby-resp-image-wrapper"],"style":"position: relative; display: block; margin-left: auto; margin-right: auto;  max-width: 800px;"},"children":[{"type":"text","value":"\n      "},{"type":"element","tagName":"a","properties":{"className":["gatsby-resp-image-link"],"href":"/blog/static/431d5e47218f8b087468e41e782f77aa/2fd05/1.jpg","style":"display: block","target":"_blank","rel":["noopener"]},"children":[{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["gatsby-resp-image-background-image"],"style":"padding-bottom: 44.79166666666667%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'179\\'%3e%3cpath%20d=\\'M398%205l-5%201c-12%201-20%203-21%205h-24l-14%201c-5%201-5%201-2%204%202%202%204%203%204%201l4%201c3%201%204%203%204%204%200%203%201%202%205%200l7-2%207-2c6-3%206-3%208%202l2%204-2%201-3%202%202%201%204-2%202%201-2%201c-2%201-2%201%200%201%203%200%203%200%203-3%200-4%204-5%2010-1h7l6-1V14c0-9-1-11-2-9M152%209c-2%201-2%203-1%203v10c-2%204-2%205-8%206s-13%204-16%207c-3%202-20%208-27%209l-8%201-8%201c-6-1-11%200-11%202l10%201a1241%201241%200%200119%201l4-1c2-1%203-1%202-2l3-1%204-1%2010%201c1%201%202%201%205-1%204-5%207-5%2024-1%202%200%203-1%200-3l-1-1-1-2-2-2%203%201%205%201%204%201c1%201%202%201%201%202-2%200-1%201%202%203l3%201-2-2v-1l7%203c6%205%2017%208%2022%207l4%201%203%201c2%200%202%200%200-1-2%200-3-2-1-2%202-1%202-4%200-4l-3-2c-1-2-2-2-4-2-2%201-3%203-1%203l1-1%201-1c2%202%200%204-3%204s-4-1-2-4%200-5-8-9l-11-5-8-2c-4-1-5-1-5-4l-2-6c-1-4-1-5%203-7v-1l-3-1c-2-2-2-2-4%200m210%2023l-14%202a317%20317%200%2001-49%202c2%200%203%201%203%202s8%205%2018%206a611%20611%200%200153%2015l1%202h-2l-3%201-4%201c-3%201-3%201-2%204%203%205%202%206-6%206-9%201-13%203-11%204s-5%202-15%202c-8%200-11%200-25%203l-15%201-6%201-2%201-3%201%203%201h3l-3%201c-3%201-3%201-1%201l3%201-3%201c-6%200-7%200-4%202l2%204c1%202%200%202-2%201l-4%201c-2%202-2%202%200%201%202%200%203%200%205%202v4l-5%201c-3%200-10%203-10%204l3%202h2l1-1v2c-1%203-4%203-5%200-1-1-2-2-3-1-2%200-6-3-6-5l-4-1c-5%200-5%202-1%203l3%201%203%202c4%203%208%206%206%206l-3-2-6-1-4%201%203%201c4%202%206%205%204%205l-1%201%202%201%203%201-1%201-2%201c0%202%205%202%2015%201%2013-2%2018-2%2022-1%204%202%204%202-9%203a1316%201316%200%2000-15%202c1%201-1%201-4%201l-6%201-7%201c-5%200-6%200-3%201%203%200%201%201-6%201-14%201-19%202-19%203l1%201c18%200%2048-4%2052-6s19-4%2016-2l-4%201c-9%200-5%202%206%202l12%201-13%201-15%202-17%201a253%20253%200%2000-30%203c-6%200%200%202%207%202%2012%200%205%202-10%203a53315%2053315%200%2000-22%203l3%201h-3c-3-1-4-1-4%201h-6c-1-1%200-1%201-2%202-1%202-1-1-1l-5-1%201%201c1%200%202%200%201%201h-4a270%20270%200%2000-52-1l24%202%2025%202%2019%201%202-1-1%201v2l2-1c1-1%207%201%207%202l-4%201-12%202-8%201-6%202-7%201-8%201c-1%202-7%202-21%203a256%20256%200%2000-31%203l17-3c17-3%2022-5%2022-6l2-1%201-1h16c2-1%201-1-2-1l-5-3-4-1c-2%200-3%200-2-1l-2-1-3%201h-22l-5-1-3-1h-3l-5%201a437%20437%200%2000-38%201c2-2-1-2-9-1-9%201-10%201-4-2l16-1h7l-1-1%207-1c11%200%2016%200%2014-1-1-1%206-1%2045-3l16-1-2-1-2-2h-2c-1%201-3%202-4%201l-4%201c-2%201-33%200-32-1h6c3%200%204%200%203-1s-1-2%201-2h2c1%202%2014-1%2014-4%200-1-5%200-8%202l-4%201c-2%200-2%200%200-1l7-3a113%20113%200%200118-7l6-2%207-2%205-3%202-2h-4c-2%201-4%201-5-1h-4l-1-1-1%202c0%202-1%203-2%203l-1-2c1-1%201-1-4-1-6%201-6%201-5%204v2h-2c1%202%200%202-1%202l-5%201-10%201c-7%200-8%200-8-2-1-3%200-5%202-5l1-1%203-2%202-1%203-1%207-3%205-2c2%200%203-2%201-2l-1-2h7l3-3c4-2%203-2-6-1-7%202-8%203-8%205l-3%201c-2-1-3-1-4%201l-2%201-2-1-11-1c-10%200-13%201-3%202h4l-3%201c-5%202-38%202-34%200l5-1c3%200%204-1%203-4l-1-2v-1l2-1%202-1c-1-1%201-2%209-4%204-1%207%200%204%201l-1%202c0%202%206%202%2013%201l9-2c10-1%2013-2%208-3-1-1%200-1%202-1%204%200%204%200%202-1s-2-1%202-1l4%201h1c1-1%207-2%208-1%201%202%209%200%209-2%201-2%207-4%208-2l4%202c3%202%203%202%204%200%202-2%202-2%203-1%201%202%202%202%204%202v-2h5c6%200%207%200%207-2l3-2c1-1%203%201%201%202-1%201-1%201%201%201s3-1%200-4c-1-2-8-2-10%200-1%202-3%202-6%202s-4-1-4-3c0-3%200-3%201-2%203%202%204%201%205-4v-4c1-1%209%204%209%206l5%201%204-1%201-1c2%200%201%204-1%204-2%201%202%205%205%204%205-1%205-1%203-2s-2-1%200-1l2%201c1%202%2011%200%2015-3%204-2%2026-5%2039-5l16-1a1713%201713%200%200126-5%2080%2080%200%2001-21-4h-24l1%201%201%201-6-1a214%20214%200%2000-21-4l3-1h-12l-10%201c1-1%201-1-2-1l-9%201c-5%200-6%200-3%201%205%201%208%203%206%203l-8%202c-4%201-5%202-6%200l-4-1c-4%200-4-3%200-3%204-1%204-3%200-3l-6-1c-2%200-3%200-2%201s0%201-3%201c-6%201-6%203%200%202%205%200%208%201%204%202l-2%203c-1%202-2%202-4%202-4%200-14%203-14%204l6%204c2%200%203%204%201%204l-1%201c2%202-1%203-3%202l-1-2v-4l-2%201-3%202c-2%200-2%200%201-3l1-3c-7-1-18%200-19%202l-5%202c-3%200-4%201-5%202%200%201-1%202-3%202-4%201-5%200-2-1%202-1%203-2%202-3-2-2-5-1-11%201-2%202-5%203-6%202l-6%202-6%201%2013-7%203-1%202-1%203-1h-24c0-2-4-2-18-5l-5-1H78l2-1%209-5%2010-4c4%200%204%200%202%201l-4%202c-4%200-1%203%205%204l14%203c11%203%2015%203%2015-1l1-2v-1l-1-3c0-3-1-4-2-4h-11c0%202-6%203-10%203-5-1-5-3%201-3%207%200%208-1%203-3l-7-1-12-4a167%20167%200%2000-26-8%202144%202144%200%2001-54-2L0%2046v133h401v-65l-1-72v-7l-13-2c-15-2-16-2-25-1M247%2042l-2%201c-1%200-1%201%201%202%203%202%203%205%201%209l-1%204c1%201%201%201%203-2l1-3%202%203c1%202%201%203%202%202v-3c-3-4-2-8%201-10%202-1%203-3%201-2l-3-1c0-2-5-2-6%200m50%208c-3%201-5%203-5%204l-1%203-1%203c1%202%201%202%202-1%202-1%203-3%204-2l1-1c0-3%204-1%205%202%201%205%201%205-1%205l-2%202c0%202%203%203%2012%203l5%202c0%202%201%202%204%202s3%200%202-1c-4-1-2-3%203-2l1-1-1-1%201-7v-2l-1-2c1-1%200-1-1-1h-2l2-2c4-3%202-5-5-5h-12c-5-1-6-1-10%202M23%20109l7%202%209%202c3%203%206%204%2010%204l4%201-4-1-5-3-3-1c-1-1%201-1%204-1h3c-2-1-2-1%200-1h4l6%201h4l-4-2c-4-1-34-2-35-1m29%2012l4%201%2015%205%204%201%203%201%202%201%203%202c2%201%202%201-1%201-5%200-2%201%2010%204l10%202%202%201%205%201h5l-3-3-4-1-4-2-5-1-6-3-6-3c-4-3-37-10-34-7\\'%20fill=\\'%23f9ebd2\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;"},"children":[]},{"type":"text","value":"\n  "},{"type":"element","tagName":"img","properties":{"className":["gatsby-resp-image-image"],"alt":"1","title":"1","src":"/blog/static/431d5e47218f8b087468e41e782f77aa/b9a50/1.jpg","srcSet":["/blog/static/431d5e47218f8b087468e41e782f77aa/d336c/1.jpg 200w","/blog/static/431d5e47218f8b087468e41e782f77aa/9c499/1.jpg 400w","/blog/static/431d5e47218f8b087468e41e782f77aa/b9a50/1.jpg 800w","/blog/static/431d5e47218f8b087468e41e782f77aa/5e53b/1.jpg 1200w","/blog/static/431d5e47218f8b087468e41e782f77aa/b7ec6/1.jpg 1600w","/blog/static/431d5e47218f8b087468e41e782f77aa/2fd05/1.jpg 1920w"],"sizes":["(max-width:","800px)","100vw,","800px"],"loading":"lazy"},"children":[]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n    "}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From the previous blogs, we know basically how a machine will make predictions. So obviously, the next question is how will a machine improve the prediction it\nmakes, how will the prediction be more accurate? This is where we will understand how a machine learns, or in a more technical way, how the algorithm will update\nthe weights to give a better output. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a previous blog, I mentioned the three basic steps of how machine learning works are predicting, comparing and learning. Let‚Äôs dive into the comparing and\nlearning parts now. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"üìä Comparing"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After predicting an output, we need to measure how close the output was to the correct answer. Only once we know by how much did our measurement miss, will we\nbe able to ‚Äúlearn‚Äù where we went wrong. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this, we find out the error between the prediction and the true output. The simplest way to find this error is to subtract the input from the output and see\nby what margin we were off. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"üìà Learning"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After comparison, the final step is learning which updates the  weights in a network to make better predictions. In this  blog, we will consider a learning\nalgorithm called Gradient Descent."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"üéØ Finding the error"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"weight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.3"}]},{"type":"text","value":"\ngoal "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n\npred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight\n\nerror "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"goal "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"error"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.7224999999999999"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we calculated the difference between the prediction made and the goal, and then squared it. This is called the mean squared error. This is one of the\ntechniques using which we can find the error. There‚Äôll be a couple of questions coming up about now."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Why did we square the error?"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want the error to be positive, and hence we square it. Simply finding the difference between "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"goal"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"pred"}]},{"type":"text","value":" might sometimes give a negative result."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Why do we need the error to be positive?"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let‚Äôs say you‚Äôre practising target shooting. Whether your bullet hits the target 2 centimetres above, or 2 centimetres below, both the times, you missed by 2\ncentimetres. In both the cases your error is 2 centimetres. Now instead of squaring if you just find the error, the error will be 2 centimetres, and -2\ncentimeters, thereby making the resultant average of the error 0("},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"2 + (-2) = 0"}]},{"type":"text","value":"). This will give us a wrong result. Therefore to include the entire range, we\nkeep the error positive by squaring it. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One thing to note here is: Squaring will make big errors bigger, and small errors, -1 < error < 1, smaller. But this works fine because we will be able to\npenalise bigger errors better, instead of worrying about the small ones. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"üìâ Gradient descent"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So now let‚Äôs get into gradient descent. Imagine you are in a valley. You need to get to the bottom of the valley by taking small steps at a time. If your steps\nare too large, you‚Äôll end up crossing the bottom, and if your steps are too small it‚Äôll take you forever to get to the bottom. The algorithm which will help you\nget to the bottom efficiently is gradient descent. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"span","properties":{"className":["gatsby-resp-image-wrapper"],"style":"position: relative; display: block; margin-left: auto; margin-right: auto;  max-width: 800px;"},"children":[{"type":"text","value":"\n      "},{"type":"element","tagName":"a","properties":{"className":["gatsby-resp-image-link"],"href":"/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/c5706/gd.png","style":"display: block","target":"_blank","rel":["noopener"]},"children":[{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["gatsby-resp-image-background-image"],"style":"padding-bottom: 87.73424190800682%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'351\\'%3e%3cpath%20d=\\'M46%2019a614%20614%200%2001-1%205c2%200%202%204%202%2049l1%2049V73c0-43%200-49%202-49l-1-5-2-4-1%204M35%2044a492%20492%200%200036%20168c-3%200-4%208-2%2012%202%203%204%204%208%204%203%201%207%204%204%204l-1%201%201%201c1%200%204%203%207%208a145%20145%200%200081%2068l-60%201-62%201h61a1727%201727%200%200192%200%2030932%2030932%200%2000141%201c0%202%200%202%205%200l5-1-3-2c-6-2-7-2-7-1%201%202-5%202-69%202h-70l10-4c68-22%20118-124%20127-256l-1-11a480%20480%200%2001-25%20136c-23%2069-58%20114-101%20129-13%205-36%205-49%201-30-10-56-35-78-73l-3-6%202-3c3-7%200-12-7-13-3%200-3-1-7-8A453%20453%200%200137%2049c0-9-2-13-2-5m12%20183\\'%20fill=\\'%23f9ebd2\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;"},"children":[]},{"type":"text","value":"\n  "},{"type":"element","tagName":"img","properties":{"className":["gatsby-resp-image-image"],"alt":"gd","title":"gd","src":"/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/67d59/gd.png","srcSet":["/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/563d8/gd.png 200w","/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/7c2ef/gd.png 400w","/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/67d59/gd.png 800w","/blog/static/9b0e1d17b2e6fa5c1655be510303d25f/c5706/gd.png 1174w"],"sizes":["(max-width:","800px)","100vw,","800px"],"loading":"lazy"},"children":[]},{"type":"text","value":"\n  "}]},{"type":"text","value":"\n    "}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are currently at the black dot, and we want to get to the dotted circle, which is the bottom.   "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The basic rule of machine learning: We need to keep adjusting the weights so that the error reduces to 0."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let‚Äôs see the code for a basic implementation of gradient descent: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1.1"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" iteration "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"range"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"-----\\nWeight:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\tpred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight\n\terror "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n\tdelta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred\n\tweight_delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":"\n\tweight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" weight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" weight_delta\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Error:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"error"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Prediction:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Weight Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight_delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-0.55\n-----\nWeight:0.55\nError:0.01102500000000002 Prediction:0.6050000000000001\nDelta:0.1050000000000001 Weight Delta:0.11550000000000012\n-----\nWeight:0.43449999999999994\nError:0.00048620250000000064 Prediction:0.47795\nDelta:-0.022050000000000014 Weight Delta:-0.024255000000000016\n-----\nWeight:0.45875499999999997\nError:2.1441530249999833e-05 Prediction:0.5046305\nDelta:0.004630499999999982 Weight Delta:0.0050935499999999806"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"What does each variable do here?"}]}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"pred"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"The prediction made by the network"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"error"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"The mean squared error"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"delta"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"The absolute error with it‚Äôs sign"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"weight_delta"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"Calculating the amount by which the weights need to be changed along with the direction (positive or negative, increase or decrease)"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we calculated the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight_delta"}]},{"type":"text","value":" by multiplying the delta with the input. The reason for this is so that the change to be made in the weights can be scaled.\nBasically, if the input is big, the amount by which we change the weight should also be big."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the simplest implementation of gradient descent in which we: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Find the prediction"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Find the mean squared error"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Find the absolute error"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Find the amount by which the weight needs to be updates"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Update the weight"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As we keep improving the algorithm, the underlying steps will still follow the same principles. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let‚Äôs dig deeper into "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight_delta"}]},{"type":"text","value":" before we proceed further. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight_delta"}]},{"type":"text","value":" is a derivative. A derivative simply allows us to pick a couple of variables in a\nformula and figure out how they relate to each other. Here, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight_delta"}]},{"type":"text","value":" is what is determining the relation between the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"error"}]},{"type":"text","value":" and the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight"}]},{"type":"text","value":". Our\nderivative, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight_delta"}]},{"type":"text","value":" tells how much did changing a weight contribute to the error. "}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://user-images.githubusercontent.com/41234408/107554978-a343eb00-6bfc-11eb-97f5-1a3669ca8154.gif","alt":"gd2"},"children":[]}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"How gradient descent reaches the bottom"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, in the algorithm we ran, try to set the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"goal_pred"}]},{"type":"text","value":" variable to 4."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:2.0\nError:56.25 Prediction:8.0\nDelta:7.5 Weight Delta:30.0\n-----\nWeight:-28.0\nError:12656.25 Prediction:-112.0\nDelta:-112.5 Weight Delta:-450.0\n-----\nWeight:422.0\nError:2847656.25 Prediction:1688.0\nDelta:1687.5 Weight Delta:6750.0"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The output is not even remotely close to 2, and the error just kept on increasing. The reason for this is they way we are updating the weights. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"weight = weight - (input * (pred - goal_pred))"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The larger, the input, the larger the update to the weight. The network will start overcorrecting in both directions in order to compensate for the error. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Imagine you‚Äôre blindfolded and are jumping down a mountain in small jumps to get to the bottom. So you keep taking small jumps. In case of this current\nscenario, let‚Äôs assume you miss the bottom, and jump up to the other side which starts going up. You know now that you‚Äôve crossed the bottom since you‚Äôre going\nfurther away from your goal. So now in order to take a step back, you jump in the reverse direction. But since your input is already big, it‚Äôll result in your\njump taking you back up to the other side of the mountain. This will keep continuing, the error increasing, and you going further away from the bottom."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is known as divergence. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ü§º‚Äç‚ôÇÔ∏è How to combat divergence?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now that we know where our algorithm lacks, we need to improve it. The error is basically that the network is overshooting. What if we could simply multiply the\nweight update by a small number which compensates for this overshooting? This way, we would be taking smaller steps instead of jumping here and there."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this purpose, we use a variable called alpha. The alpha value generally ranges between 0 and 1. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"alpha"}]},{"type":"text","value":" is something which we need to find out, mostly by\nguesswork(there are more elegant solutions to this than guesswork which we can get to later). We can try out different values of alpha ranging between 0 and 1,\nlike 0.1, 0.01, 0.001, etc, and keep on adjusting it until we feel the value is optimal and there won‚Äôt be any major overshooting. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So we will simply multiply our derivative with alpha. Let‚Äôs take a look at the updated code which includes "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"alpha"}]},{"type":"text","value":" as well."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\nalpha "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.1"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" iteration "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"range"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"-----\\nWeight:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\tpred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight\n\terror "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n\tdelta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred\n\tweight_delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":"\n\tweight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" weight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"alpha "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight_delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Error:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"error"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Prediction:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Weight Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight_delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:0.2\nError:0.09000000000000002 Prediction:0.8\nDelta:0.30000000000000004 Weight Delta:1.2000000000000002\n-----\nWeight:0.07999999999999999\nError:0.03240000000000002 Prediction:0.31999999999999995\nDelta:-0.18000000000000005 Weight Delta:-0.7200000000000002\n-----\nWeight:0.15200000000000002\nError:0.011664000000000022 Prediction:0.6080000000000001\nDelta:0.1080000000000001 Weight Delta:0.4320000000000004"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The output is now a lot closer to 0.5, than what it was before. This means we‚Äôre on the correct track. Now we can just increase the number of iterations from 4\nto 20 in order to get the desired result. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.5"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"4"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\nalpha "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0.1"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"for"}]},{"type":"text","value":" iteration "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"in"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"range"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"20"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"-----\\nWeight:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\tpred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight\n\terror "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n\tdelta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" pred "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" goal_pred\n\tweight_delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" delta "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"text","value":"\n\tweight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" weight "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"alpha "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"*"}]},{"type":"text","value":" weight_delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Error:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"error"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Prediction:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"pred"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\t"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\" Weight Delta:\""}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"str"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"weight_delta"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output: "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"-----\nWeight:0.0\nError:0.25 Prediction:0.0\nDelta:-0.5 Weight Delta:-2.0\n-----\nWeight:0.2\nError:0.09000000000000002 Prediction:0.8\nDelta:0.30000000000000004 Weight Delta:1.2000000000000002\n-----\nWeight:0.07999999999999999\nError:0.03240000000000002 Prediction:0.31999999999999995\nDelta:-0.18000000000000005 Weight Delta:-0.7200000000000002\n-----\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":"\nWeight:0.1249647361261568\nError:1.9896652774865827e-08 Prediction:0.4998589445046272\nDelta:-0.00014105549537279938 Weight Delta:-0.0005642219814911975\n-----\nWeight:0.1250211583243059\nError:7.16279499894418e-09 Prediction:0.5000846332972236\nDelta:8.463329722363522e-05 Weight Delta:0.00033853318889454087\n-----\nWeight:0.12498730500541645\nError:2.5786061996210327e-09 Prediction:0.4999492200216658\nDelta:-5.077997833419223e-05 Weight Delta:-0.00020311991333676893\n-----\nWeight:0.12500761699675011\nError:9.282982318601891e-10 Prediction:0.5000304679870005\nDelta:3.046798700045983e-05 Weight Delta:0.00012187194800183931"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We got to the output, 0.5000304679870005 which is almost equal to 0.5 and the error is almost negligible now. "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So this is basically how gradient descent works under the hood and how machines can learn. In the next blog, we will play with gradient descent a bit more,\nlearn to use it with multiple inputs, outputs, and tweak some aspects of the weights to get better results. "}]}],"data":{"quirksMode":false}},"fields":{"slug":"/learning/","prefix":"2021-02-10"},"frontmatter":{"title":"How Do Machines Actually Learn","author":"Yash Khare","tags":["ml from scratch"],"cover":{"childImageSharp":{"resize":{"src":"/blog/static/5b0dc85a9e642c4bea957d3d44c4ff9a/c83a6/2.jpg"}}}},"parent":{"__typename":"File","modifiedTime":"2021-03-11"}},"authornote":{"id":"d068915d-d209-5a47-ba22-eed3c3f3665e","html":"<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href=\"/blog/\">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Mr. Gatsby"}]},{"type":"text","value":" Proin ornare ligula eu tellus tempus elementum. Aenean "},{"type":"element","tagName":"a","properties":{"href":"/blog/"},"children":[{"type":"text","value":"bibendum"}]},{"type":"text","value":" iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus."}]}],"data":{"quirksMode":false}}}},"pageContext":{"slug":"/learning/","next":{"id":"875d3a4d-76e8-5482-8c4f-6789ab2206a5","excerpt":"In this blog we‚Äôll discuss making predictions having multiple outputs.  Let‚Äôs start with the simplest case of having a single input, with‚Ä¶","fields":{"slug":"/prediction-2/","prefix":"2021-01-30","source":"posts"},"frontmatter":{"title":"Making Predictions Part 2: Sending data forward through a neural network","tags":["ml from scratch"],"cover":{"children":[{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='800'%20height='360'%3e%3cpath%20d='M128%2015l14%2015H92c-49%200-51%201-55%203-19%208-24%2034-9%2049l33%2018%2030%2015c0%201-6%205-9%205l-28%202c-26%201-27%201-32%203-12%207-18%2017-18%2032-1%2020%206%2026%2048%2046l5%203-7%2012c-16%2027-17%2029-17%2039%200%2014%200%2013%2031%2054l38%2048%2019%201h18l3-4c4-7%204-19%200-25l-3-4a1147%201147%200%2000-32-51h39c42%200%2042%200%2040-5l-5-24A221%20221%200%2001348%202l1-1-31-1h-32l-6%2012-10%2014c-8%206-18%208-27%206-5-2-8-4-35-25l-10-7h-83l13%2015M450%201c0%201%204%203%209%204a231%20231%200%200198%2059%20210%20210%200%200142%2062%20221%20221%200%200113%20147v3h79a429%20429%200%2001-23%2036c-16%2024-18%2031-12%2042l3%206h37l5-6%2045-59c15-18%2017-21%2019-30%202-12%200-19-13-39l-11-20%2018-10c20-9%2025-12%2030-18%2013-18%205-46-16-54-6-2-8-2-29-2-23%200-27-1-34-4-3-2-3-5%200-5l58-29c16-12%2014-38-2-49-8-5-10-5-61-5l-48-1%2018-20%208-8-42-1h-41l-4%203-4%203c-1%202-30%2023-33%2024-8%205-21%203-29-3-3-2-12-15-12-16l-3-6-3-5h-32c-25%200-31%200-30%201m61%2068l-30%209c-15%205-13%2014%203%2018%2010%202%2010%201-5%2026-10%2017-12%2020-40%2060-23%2035-21%2032-25%2032l-6%201a464%20464%200%2001-58-46v-7c-2-20-22-31-40-21-10%205-16%2018-14%2028%202%207%201%208-9%2024-30%2043-50%2081-50%2093%200%207%205%2012%2013%2012%206%200%2010-3%2012-7%204-9%205-13%2012-25a634%20634%200%200149-75l6-1c3-1%204-1%2018%2011a1009%201009%200%200130%2026c11%209%2011%209%2012%2016%201%2016%2010%2025%2025%2025%207%200%2013-2%2019-8%207-7%208-12%208-23-1-9-1-10%202-13a492%20492%200%200022-32%20942%20942%200%200049-77l6%207c6%207%209%208%2013%207%206-2%206-9-2-34-7-20-11-27-14-27l-6%201m30%2028l1%206a215%20215%200%20012%2094l2%204%201%203v-10l1-4c1-2%201-2%201%200%200%204%202%202%203-2%200-3%202-6%202-3l2%201c3%200%205-3%206-7l3-3%202-1%204-4c5-1%205-1%204-6v-4l3%203%203%203v-5c0-5%200-6%201-5l2%204c1%203%203%204%203%201l-1-5a615%20615%200%2001-6-17%20130%20130%200%2000-24-41c-4-4-5-5-3-1v3c-1%201-1%201-1-1%200-1%200-2-1-1l-2-1c0-2-2-2-2%200l-1%201-1-2-2-2-2%202m-224%2057c-8%205-8%2017%201%2020%2010%204%2020-6%2016-16-4-6-11-8-17-4m90%2080c-10%2010%201%2024%2013%2017%206-4%208-13%203-18-4-5-11-4-16%201m-175%2079l-2%203c0%204%2012%2021%2025%2035l8%209h51c48%200%2051%200%2049-2-3-1-3-1-2-2%202-1%202-2%201-4l1-3%201-1-11-1a208%20208%200%2001-112-34c-1-3-7-2-9%200m-40%209c-7%204-17%2016-14%2018%200%201%205-5%205-7s2-1%202%201c1%202%203%203%203%201l7-1c5%200%207-1%208-2%203-3%203-2%203%200l1%202c2%200%202-3-1-8-3-7-5-8-14-4m399%206c-1%201%200%201%201%201l-1%201c-3%201-3%203%201%202h5l-2%201%202%201%203%203%203%201c2%200%203%202%201%202v2l1%202c0%201%201%202%203%202l3%203c0%201%205%206%206%205l1%201%205%205%201-2h2c4%204%205%202%202-4-4-9-20-23-26-23l-2-1-4-1-4-1h-1m-193%2014l-8%201c-6%201-6%201-7%205-2%205-8%2011-11%2011-1%201%200%201%203%201h6l2-6%202-6%202-1%202-1%203-1a1830%201830%200%200112-3h-6'%20fill='%23f9ebd2'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.2222222222222223,"src":"/blog/static/14c7ee98315e5eb2de92deddcb18af29/a0cde/featured.jpg","srcSet":"/blog/static/14c7ee98315e5eb2de92deddcb18af29/9d6a9/featured.jpg 200w,\n/blog/static/14c7ee98315e5eb2de92deddcb18af29/1a610/featured.jpg 400w,\n/blog/static/14c7ee98315e5eb2de92deddcb18af29/a0cde/featured.jpg 445w","srcWebp":"/blog/static/14c7ee98315e5eb2de92deddcb18af29/afb32/featured.webp","srcSetWebp":"/blog/static/14c7ee98315e5eb2de92deddcb18af29/98843/featured.webp 200w,\n/blog/static/14c7ee98315e5eb2de92deddcb18af29/c4571/featured.webp 400w,\n/blog/static/14c7ee98315e5eb2de92deddcb18af29/afb32/featured.webp 445w","sizes":"(max-width: 445px) 100vw, 445px"}}]}}},"source":"posts"}},"staticQueryHashes":["2909820253","3157407458","3157407458","583734074"]}